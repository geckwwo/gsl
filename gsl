#!/usr/bin/python3
import sys
import os

from lang.front.lexer import Lexer
from lang.front.parser import Parser
from lang.middle.ir import IRGenerator
#from lang.back.luatrans import LuaTranspiler
from lang.back.azureleaf import AzureLeafCompiler

DBG = True

f = open(sys.argv[1]).read()
if DBG:
    print(f"-- Source\n{f}\n")

tokens = Lexer().run(f)
if DBG:
    print(f"-- Tokens\n{tokens}\n")

ast = Parser().run(tokens)
if DBG:
    print(f"-- AST\n{ast}\n")

# TODO: IR for multiple backends
ir = IRGenerator().run(ast)
if DBG:
    print(f"-- IR\n{ir}\n")

#code = LuaTranspiler().run(ir) + "\n__gslmain__()\n"
code = AzureLeafCompiler().visit(ir)
if DBG:
    print(f"-- Azure Leaf repr\n{code}\n")

#open(f"{sys.argv[1]}._gsltrans.lua", "w").write(code)
#os.system(f"luajit {sys.argv[1]}._gsltrans.lua")